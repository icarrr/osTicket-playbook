# ---
# - hosts: ansible
#   become: yes
#   vars_files:
#     - vars.yml
#   tasks:
    - name: Check if MySQL is already installed.
      stat: path=/etc/init.d/mysql
      register: mysql_installed
    - name: Update apt repository caches
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: not mysql_installed.stat.exists
    - name: Install MySQL and need package
      apt:
        pkg:
          - mysql-server
          - mysql-client
          - libmysqlclient-dev
          - python3-pymysql
        state: latest
      when: not mysql_installed.stat.exists
    - name: Start the MySQL service
      action: service name=mysql state=started
    - name: Remove the test database
      mysql_db:
        login_user: root
        login_host: "{{ omit }}"
        login_password: "{{ omit }}"
        login_port: "{{ omit }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: test
        state: absent
    - name: Create project database
      mysql_db:
        login_user: root
        login_host: "{{ omit }}"
        login_password: "{{ omit }}"
        login_port: "{{ omit }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ mysql.db_name }}"
    - name: Create user for mysql
      mysql_user:
        login_user: root
        login_host: "{{ omit }}"
        login_password: "{{ omit }}"
        login_port: "{{ omit }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        user: "{{mysql.user_name}}"
        host: "%"
        password: "{{mysql.user_password}}"
        priv: "{{ mysql.db_name }}.*:ALL,GRANT"
    - name: Ensure anonymous users are not in the database
      mysql_user:
        login_user: root
        login_host: "{{ omit }}"
        login_password: "{{ omit }}"
        login_port: "{{ omit }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        user: ''
        host: "{{item}}"
        state: absent
      with_items:
        - 127.0.0.1
        - ::1
        - localhost
    - name: Copy .my.cnf file with root password credentials
      template: 
        src: src_file/.my.cnf-root 
        dest: /root/.my.cnf 
        owner: root
        mode: 0600
    - name: Copy .my.cnf file with main user credentials
      template: 
        src: src_file/.my.cnf-main 
        dest: ~/.my.cnf 
        owner: "{{ remote.user }}"
        mode: 0600
      become: no
    - name: Update mysql root password for all root accounts
      mysql_user:
        login_user: root
        login_host: "{{ omit }}"
        login_password: "{{ omit }}"
        login_port: "{{ omit }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        user: ''
        name: root
        host: "{{item}}"
        password: "{{mysql.root_password}}"
      with_items:
        - 127.0.0.1
        - ::1
        - localhost